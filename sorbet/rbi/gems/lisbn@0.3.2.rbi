# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `lisbn` gem.
# Please instead update this file by running `bin/tapioca gem lisbn`.

class Lisbn < ::String
  extend ::Lisbn::CacheMethod

  # Returns a normalized ISBN form
  def isbn(*args, &blk); end

  # Returns a valid ISBN in ISBN-10 format.
  # Returns nil if the ISBN is invalid or incapable of conversion to ISBN-10.
  def isbn10(*args, &blk); end

  def isbn10_without_cache; end

  # Returns a valid ISBN in ISBN-13 format.
  # Returns nil if the ISBN is invalid.
  def isbn13(*args, &blk); end

  def isbn13_without_cache; end
  def isbn_10_checksum(*args, &blk); end
  def isbn_10_checksum_without_cache; end
  def isbn_13_checksum(*args, &blk); end
  def isbn_13_checksum_without_cache; end
  def isbn_with_dash; end
  def isbn_without_cache; end

  # Returns an Array with the 'parts' of the ISBN in left-to-right order.
  # The parts of an ISBN are as follows:
  #   - GS1 prefix (only for ISBN-13)
  #   - Group identifier
  #   - Prefix/publisher code
  #   - Item number
  #   - Check digit
  #
  # Returns nil if the ISBN is not valid.
  # Returns nil if parts argument is 4 but ISBN-10 does not exist
  # Returns nil if the group and prefix cannot be identified.
  #
  # @raise [ArgumentError]
  def parts(*args, &blk); end

  def parts_without_cache(parts = T.unsafe(nil)); end

  # Returns true if the ISBN is valid, false otherwise.
  #
  # @return [Boolean]
  def valid?(*args, &blk); end

  private

  # @return [Boolean]
  def valid_isbn_10?; end

  # @return [Boolean]
  def valid_isbn_13?; end
end

module Lisbn::CacheMethod
  def cache_method(*methods); end
end

Lisbn::RANGES = T.let(T.unsafe(nil), Hash)

module Lisbn::Ranges
  class << self
    def save_to_yaml!; end
    def to_yaml; end
  end
end
