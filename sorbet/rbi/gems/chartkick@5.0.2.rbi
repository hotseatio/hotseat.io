# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `chartkick` gem.
# Please instead update this file by running `bin/tapioca gem chartkick`.

# for both multiple series and
# making sure hash order is preserved in JavaScript
#
# source://chartkick//lib/chartkick/core_ext.rb#4
class Array
  include ::Enumerable

  # source://chartkick//lib/chartkick/core_ext.rb#5
  def chart_json; end
end

# source://chartkick//lib/chartkick/helper.rb#1
module Chartkick
  class << self
    # Returns the value of attribute content_for.
    #
    # source://chartkick//lib/chartkick.rb#23
    def content_for; end

    # Sets the attribute content_for
    #
    # @param value the value to set the attribute content_for to.
    #
    # source://chartkick//lib/chartkick.rb#23
    def content_for=(_arg0); end

    # Returns the value of attribute options.
    #
    # source://chartkick//lib/chartkick.rb#24
    def options; end

    # Sets the attribute options
    #
    # @param value the value to set the attribute options to.
    #
    # source://chartkick//lib/chartkick.rb#24
    def options=(_arg0); end
  end
end

# source://chartkick//lib/chartkick/engine.rb#3
class Chartkick::Engine < ::Rails::Engine
  class << self
    # source://activesupport/7.0.6/lib/active_support/callbacks.rb#68
    def __callbacks; end
  end
end

# source://chartkick//lib/chartkick/helper.rb#2
module Chartkick::Helper
  # source://chartkick//lib/chartkick/helper.rb#19
  def area_chart(data_source, **options); end

  # source://chartkick//lib/chartkick/helper.rb#15
  def bar_chart(data_source, **options); end

  # source://chartkick//lib/chartkick/helper.rb#11
  def column_chart(data_source, **options); end

  # source://chartkick//lib/chartkick/helper.rb#27
  def geo_chart(data_source, **options); end

  # source://chartkick//lib/chartkick/helper.rb#3
  def line_chart(data_source, **options); end

  # source://chartkick//lib/chartkick/helper.rb#7
  def pie_chart(data_source, **options); end

  # source://chartkick//lib/chartkick/helper.rb#23
  def scatter_chart(data_source, **options); end

  # source://chartkick//lib/chartkick/helper.rb#31
  def timeline(data_source, **options); end

  private

  # don't break out options since need to merge with default options
  #
  # source://chartkick//lib/chartkick/helper.rb#38
  def chartkick_chart(klass, data_source, **options); end
end

# source://chartkick//lib/chartkick/utils.rb#2
module Chartkick::Utils
  class << self
    # https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/hash/deep_merge.rb
    #
    # source://chartkick//lib/chartkick/utils.rb#4
    def deep_merge(hash_a, hash_b); end

    # source://chartkick//lib/chartkick/utils.rb#16
    def json_escape(s); end
  end
end

# from https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/string/output_safety.rb
#
# source://chartkick//lib/chartkick/utils.rb#14
Chartkick::Utils::JSON_ESCAPE = T.let(T.unsafe(nil), Hash)

# source://chartkick//lib/chartkick/utils.rb#15
Chartkick::Utils::JSON_ESCAPE_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://chartkick//lib/chartkick/version.rb#2
Chartkick::VERSION = T.let(T.unsafe(nil), String)

# source://chartkick//lib/chartkick/core_ext.rb#16
class Hash
  include ::Enumerable

  # source://chartkick//lib/chartkick/core_ext.rb#17
  def chart_json; end
end
