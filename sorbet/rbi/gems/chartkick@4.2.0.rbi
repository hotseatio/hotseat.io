# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `chartkick` gem.
# Please instead update this file by running `bin/tapioca gem chartkick`.

module Chartkick
  class << self
    # Returns the value of attribute content_for.
    def content_for; end

    # Sets the attribute content_for
    #
    # @param value the value to set the attribute content_for to.
    def content_for=(_arg0); end

    # Returns the value of attribute options.
    def options; end

    # Sets the attribute options
    #
    # @param value the value to set the attribute options to.
    def options=(_arg0); end
  end
end

class Chartkick::Engine < ::Rails::Engine; end

module Chartkick::Helper
  def area_chart(data_source, **options); end
  def bar_chart(data_source, **options); end
  def column_chart(data_source, **options); end
  def geo_chart(data_source, **options); end
  def line_chart(data_source, **options); end
  def pie_chart(data_source, **options); end
  def scatter_chart(data_source, **options); end
  def timeline(data_source, **options); end

  private

  # don't break out options since need to merge with default options
  def chartkick_chart(klass, data_source, **options); end

  # https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/hash/deep_merge.rb
  def chartkick_deep_merge(hash_a, hash_b); end

  def chartkick_json_escape(s); end
end

# from https://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/string/output_safety.rb
Chartkick::Helper::JSON_ESCAPE = T.let(T.unsafe(nil), Hash)

Chartkick::Helper::JSON_ESCAPE_REGEXP = T.let(T.unsafe(nil), Regexp)
Chartkick::VERSION = T.let(T.unsafe(nil), String)

# for both multiple series and
# making sure hash order is preserved in JavaScript
module Enumerable
  extend ::ActiveSupport::EnumerableCoreExt::Constants

  def chart_json; end
end
