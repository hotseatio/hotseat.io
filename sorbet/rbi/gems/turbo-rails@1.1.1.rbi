# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `turbo-rails` gem.
# Please instead update this file by running `bin/tapioca gem turbo-rails`.

# source://turbo-rails-1.1.1/lib/turbo/test_assertions.rb:1
module Turbo
  extend ::ActiveSupport::Autoload

  class << self
    # source://railties-7.0.3.1/lib/rails/engine.rb:405
    def railtie_helpers_paths; end

    # source://railties-7.0.3.1/lib/rails/engine.rb:394
    def railtie_namespace; end

    # source://railties-7.0.3.1/lib/rails/engine.rb:409
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # source://turbo-rails-1.1.1/lib/turbo-rails.rb:9
    def signed_stream_verifier; end

    # source://turbo-rails-1.1.1/lib/turbo-rails.rb:13
    def signed_stream_verifier_key; end

    # Sets the attribute signed_stream_verifier_key
    #
    # @param value the value to set the attribute signed_stream_verifier_key to.
    #
    # source://turbo-rails-1.1.1/lib/turbo-rails.rb:7
    def signed_stream_verifier_key=(_arg0); end

    # source://railties-7.0.3.1/lib/rails/engine.rb:397
    def table_name_prefix; end

    # source://railties-7.0.3.1/lib/rails/engine.rb:401
    def use_relative_model_naming?; end
  end
end

# source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:51
module Turbo::Broadcastable
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::Turbo::Broadcastable::ClassMethods

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:230
  def broadcast_action(action, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:281
  def broadcast_action_later(action:, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:276
  def broadcast_action_later_to(*streamables, action:, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:225
  def broadcast_action_to(*streamables, action:, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:174
  def broadcast_after_to(*streamables, target:, **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:195
  def broadcast_append(target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:261
  def broadcast_append_later(target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:256
  def broadcast_append_later_to(*streamables, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:190
  def broadcast_append_to(*streamables, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:158
  def broadcast_before_to(*streamables, target:, **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:216
  def broadcast_prepend(target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:271
  def broadcast_prepend_later(target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:266
  def broadcast_prepend_later_to(*streamables, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:211
  def broadcast_prepend_to(*streamables, target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:104
  def broadcast_remove; end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:99
  def broadcast_remove_to(*streamables, target: T.unsafe(nil)); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:302
  def broadcast_render(**rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:317
  def broadcast_render_later(**rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:323
  def broadcast_render_later_to(*streamables, **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:312
  def broadcast_render_to(*streamables, **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:123
  def broadcast_replace(**rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:241
  def broadcast_replace_later(**rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:236
  def broadcast_replace_later_to(*streamables, **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:118
  def broadcast_replace_to(*streamables, **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:142
  def broadcast_update(**rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:251
  def broadcast_update_later(**rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:246
  def broadcast_update_later_to(*streamables, **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:137
  def broadcast_update_to(*streamables, **rendering); end

  private

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:333
  def broadcast_rendering_with_defaults(options); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:329
  def broadcast_target_default; end
end

# source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:54
module Turbo::Broadcastable::ClassMethods
  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:89
  def broadcast_target_default; end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:82
  def broadcasts(stream = T.unsafe(nil), inserts_by: T.unsafe(nil), target: T.unsafe(nil), **rendering); end

  # source://turbo-rails-1.1.1/app/models/concerns/turbo/broadcastable.rb:74
  def broadcasts_to(stream, inserts_by: T.unsafe(nil), target: T.unsafe(nil), **rendering); end
end

# source://turbo-rails-1.1.1/app/helpers/turbo/drive_helper.rb:1
module Turbo::DriveHelper
  # source://turbo-rails-1.1.1/app/helpers/turbo/drive_helper.rb:13
  def turbo_exempts_page_from_cache; end
end

# source://turbo-rails-1.1.1/lib/turbo/engine.rb:5
class Turbo::Engine < ::Rails::Engine; end

# If you don't want to precompile Turbo's assets (eg. because you're using webpack),
# you can do this in an intiailzer:
#
# config.after_initialize do
#   config.assets.precompile -= Turbo::Engine::PRECOMPILE_ASSETS
# end
#
# source://turbo-rails-1.1.1/lib/turbo/engine.rb:29
Turbo::Engine::PRECOMPILE_ASSETS = T.let(T.unsafe(nil), Array)

# source://turbo-rails-1.1.1/app/helpers/turbo/frames_helper.rb:1
module Turbo::FramesHelper
  # source://turbo-rails-1.1.1/app/helpers/turbo/frames_helper.rb:38
  def turbo_frame_tag(*ids, src: T.unsafe(nil), target: T.unsafe(nil), **attributes, &block); end
end

# source://turbo-rails-1.1.1/app/helpers/turbo/includes_helper.rb:1
module Turbo::IncludesHelper
  # source://turbo-rails-1.1.1/app/helpers/turbo/includes_helper.rb:4
  def turbo_include_tags; end
end

# source://turbo-rails-1.1.1/app/channels/turbo/streams_channel.rb:34
class Turbo::StreamsChannel < ::ActionCable::Channel::Base; end

# source://turbo-rails-1.1.1/app/helpers/turbo/streams_helper.rb:1
module Turbo::StreamsHelper
  # source://turbo-rails-1.1.1/app/helpers/turbo/streams_helper.rb:27
  def turbo_stream; end

  # source://turbo-rails-1.1.1/app/helpers/turbo/streams_helper.rb:52
  def turbo_stream_from(*streamables, **attributes); end
end

# source://turbo-rails-1.1.1/lib/turbo/test_assertions.rb:2
module Turbo::TestAssertions
  extend ::ActiveSupport::Concern

  # source://turbo-rails-1.1.1/lib/turbo/test_assertions.rb:19
  def assert_no_turbo_stream(action:, target: T.unsafe(nil), targets: T.unsafe(nil)); end

  # source://turbo-rails-1.1.1/lib/turbo/test_assertions.rb:10
  def assert_turbo_stream(action:, target: T.unsafe(nil), targets: T.unsafe(nil), status: T.unsafe(nil), &block); end
end
