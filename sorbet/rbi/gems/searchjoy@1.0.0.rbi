# typed: strict

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `searchjoy` gem.
# Please instead update this file by running `bin/tapioca gem searchjoy`.

module Searchjoy
  def conversion_name; end
  def conversion_name=(val); end
  def multiple_conversions; end
  def multiple_conversions=(val); end
  def query_name; end
  def query_name=(val); end
  def query_url; end
  def query_url=(val); end
  def time_zone; end
  def top_searches; end
  def top_searches=(val); end

  class << self
    def attach_to_searchkick!; end
    def backfill_conversions; end
    def conversion_name; end
    def conversion_name=(val); end
    def multiple_conversions; end
    def multiple_conversions=(val); end
    def query_name; end
    def query_name=(val); end
    def query_url; end
    def query_url=(val); end
    def railtie_helpers_paths; end
    def railtie_namespace; end
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end
    def table_name_prefix; end
    def time_zone; end
    def time_zone=(time_zone); end
    def top_searches; end
    def top_searches=(val); end
    def use_relative_model_naming?; end
  end
end

class Searchjoy::Conversion < ::ActiveRecord::Base
  include ::Searchjoy::Conversion::GeneratedAttributeMethods
  include ::Searchjoy::Conversion::GeneratedAssociationMethods
  include ::Kaminari::ActiveRecordModelExtension
  include ::Kaminari::ConfigurationMethods
  extend ::Kaminari::ConfigurationMethods::ClassMethods

  def autosave_associated_records_for_convertable(*args); end
  def autosave_associated_records_for_search(*args); end

  class << self
    def __callbacks; end
    def _reflections; end
    def _validators; end
    def defined_enums; end
    def page(num = T.unsafe(nil)); end
  end
end

module Searchjoy::Conversion::GeneratedAssociationMethods
  def build_search(*args, &block); end
  def convertable; end
  def convertable=(value); end
  def convertable_changed?; end
  def convertable_previously_changed?; end
  def create_search(*args, &block); end
  def create_search!(*args, &block); end
  def reload_convertable; end
  def reload_search; end
  def search; end
  def search=(value); end
  def search_changed?; end
  def search_previously_changed?; end
end

module Searchjoy::Conversion::GeneratedAttributeMethods; end
class Searchjoy::Engine < ::Rails::Engine; end

class Searchjoy::Search < ::ActiveRecord::Base
  include ::Searchjoy::Search::GeneratedAttributeMethods
  include ::Searchjoy::Search::GeneratedAssociationMethods
  include ::Kaminari::ActiveRecordModelExtension
  include ::Kaminari::ConfigurationMethods
  extend ::Kaminari::ConfigurationMethods::ClassMethods

  def autosave_associated_records_for_conversions(*args); end
  def autosave_associated_records_for_convertable(*args); end
  def autosave_associated_records_for_user(*args); end
  def convert(convertable = T.unsafe(nil)); end
  def converted?; end
  def validate_associated_records_for_conversions(*args); end

  protected

  def set_normalized_query; end

  class << self
    def __callbacks; end
    def _reflections; end
    def _validators; end
    def defined_enums; end
    def page(num = T.unsafe(nil)); end
  end
end

module Searchjoy::Search::GeneratedAssociationMethods
  def build_user(*args, &block); end
  def conversion_ids; end
  def conversion_ids=(ids); end
  def conversions; end
  def conversions=(value); end
  def convertable; end
  def convertable=(value); end
  def convertable_changed?; end
  def convertable_previously_changed?; end
  def create_user(*args, &block); end
  def create_user!(*args, &block); end
  def reload_convertable; end
  def reload_user; end
  def user; end
  def user=(value); end
  def user_changed?; end
  def user_previously_changed?; end
end

module Searchjoy::Search::GeneratedAttributeMethods; end

class Searchjoy::SearchesController < ::ActionController::Base
  def index; end
  def overview; end
  def recent; end
  def stream; end

  protected

  def set_search_type; end
  def set_search_types; end
  def set_searches; end
  def set_time_range; end
  def set_time_zone; end

  private

  def _layout(lookup_context, formats); end

  class << self
    def __callbacks; end
    def _layout; end
    def _layout_conditions; end
    def middleware_stack; end
  end
end

module Searchjoy::Track; end

module Searchjoy::Track::MultiSearch
  def perform; end
end

module Searchjoy::Track::Query
  def execute; end
  def search; end
  def track; end
end

Searchjoy::VERSION = T.let(T.unsafe(nil), String)
