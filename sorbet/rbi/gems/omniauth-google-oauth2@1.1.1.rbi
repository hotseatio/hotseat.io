# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `omniauth-google-oauth2` gem.
# Please instead update this file by running `bin/tapioca gem omniauth-google-oauth2`.

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#8
module OmniAuth
  class << self
    # source://omniauth/2.1.1/lib/omniauth.rb#130
    def config; end

    # source://omniauth/2.1.1/lib/omniauth.rb#134
    def configure; end

    # source://omniauth/2.1.1/lib/omniauth.rb#138
    def logger; end

    # source://omniauth/2.1.1/lib/omniauth.rb#142
    def mock_auth_for(provider); end

    # source://omniauth/2.1.1/lib/omniauth.rb#20
    def strategies; end
  end
end

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#9
module OmniAuth::Strategies; end

# Main class for Google OAuth2 strategy.
#
# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#11
class OmniAuth::Strategies::GoogleOauth2 < ::OmniAuth::Strategies::OAuth2
  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#34
  def authorize_params; end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#101
  def build_access_token; end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#101
  def custom_build_access_token; end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#97
  def raw_info; end

  private

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#116
  def callback_url; end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#148
  def client_get_token(verifier, redirect_uri); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#120
  def get_access_token(request); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#156
  def get_scope(params); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#167
  def get_token_options(redirect_uri = T.unsafe(nil)); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#152
  def get_token_params; end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#203
  def image_params; end

  # @return [Boolean]
  #
  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#199
  def image_size_opts_passed?; end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#178
  def image_url; end

  # @return [Boolean]
  #
  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#112
  def nil_or_empty?(obj); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#171
  def prune!(hash); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#216
  def strip_unnecessary_query_parameters(query_parameters); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#230
  def token_info(access_token); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#163
  def verified_email; end

  # @raise [CallbackError]
  #
  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#247
  def verify_hd(access_token); end

  # source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#240
  def verify_token(access_token); end
end

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#12
OmniAuth::Strategies::GoogleOauth2::ALLOWED_ISSUERS = T.let(T.unsafe(nil), Array)

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#18
OmniAuth::Strategies::GoogleOauth2::AUTHORIZE_OPTIONS = T.let(T.unsafe(nil), Array)

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#14
OmniAuth::Strategies::GoogleOauth2::BASE_SCOPES = T.let(T.unsafe(nil), Array)

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#13
OmniAuth::Strategies::GoogleOauth2::BASE_SCOPE_URL = T.let(T.unsafe(nil), String)

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#15
OmniAuth::Strategies::GoogleOauth2::DEFAULT_SCOPE = T.let(T.unsafe(nil), String)

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#17
OmniAuth::Strategies::GoogleOauth2::IMAGE_SIZE_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://omniauth-google-oauth2//lib/omniauth/strategies/google_oauth2.rb#16
OmniAuth::Strategies::GoogleOauth2::USER_INFO_URL = T.let(T.unsafe(nil), String)
