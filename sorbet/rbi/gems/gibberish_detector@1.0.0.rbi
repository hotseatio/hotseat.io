# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `gibberish_detector` gem.
# Please instead update this file by running `bin/tapioca gem gibberish_detector`.

# source://gibberish_detector-1.0.0/lib/gibberish_detector/version.rb:1
class GibberishDetector
  class << self
    # @raise [GibberishDetectorException]
    # @return [Boolean]
    #
    # source://gibberish_detector-1.0.0/lib/gibberish_detector.rb:12
    def gibberish?(text, opts = T.unsafe(nil)); end

    # source://gibberish_detector-1.0.0/lib/gibberish_detector.rb:29
    def train!(opts = T.unsafe(nil)); end

    private

    # source://gibberish_detector-1.0.0/lib/gibberish_detector.rb:114
    def _averageTransitionProbability(line, log_prob_matrix); end

    # source://gibberish_detector-1.0.0/lib/gibberish_detector.rb:110
    def normalize(text); end
  end
end

# source://gibberish_detector-1.0.0/lib/gibberish_detector.rb:8
GibberishDetector::ACCEPTED_CHARACTERS = T.let(T.unsafe(nil), String)

# source://gibberish_detector-1.0.0/lib/gibberish_detector.rb:9
GibberishDetector::DATA_FILE = T.let(T.unsafe(nil), String)

# source://gibberish_detector-1.0.0/lib/gibberish_detector/version.rb:2
GibberishDetector::VERSION = T.let(T.unsafe(nil), String)

# source://gibberish_detector-1.0.0/lib/gibberish_detector.rb:5
class GibberishDetectorException < ::Exception; end

# Enhance the String class with a XML escaped character version of
# to_s.
#
# source://gibberish_detector-1.0.0/lib/string.rb:1
class String
  include ::Comparable

  # @return [Boolean]
  #
  # source://gibberish_detector-1.0.0/lib/string.rb:2
  def gibberish?; end
end

# source://activesupport-7.0.3.1/lib/active_support/core_ext/object/blank.rb:104
String::BLANK_RE = T.let(T.unsafe(nil), Regexp)

# source://activesupport-7.0.3.1/lib/active_support/core_ext/object/blank.rb:105
String::ENCODED_BLANKS = T.let(T.unsafe(nil), Concurrent::Map)
