# typed: strict

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `omniauth-oauth2` gem.
# Please instead update this file by running `bin/tapioca gem omniauth-oauth2`.

module OmniAuth
  class << self
    def config; end
    def configure; end
    def logger; end
    def mock_auth_for(provider); end
    def strategies; end
  end
end

module OmniAuth::Strategies; end

# Authentication strategy for connecting with APIs constructed using
# the [OAuth 2.0 Specification](http://tools.ietf.org/html/draft-ietf-oauth-v2-10).
# You must generally register your application with the provider and
# utilize an application id and secret in order to authenticate using
# OAuth 2.0.
class OmniAuth::Strategies::OAuth2
  include ::OmniAuth::Strategy
  extend ::OmniAuth::Strategy::ClassMethods

  # Returns the value of attribute access_token.
  def access_token; end

  # Sets the attribute access_token
  #
  # @param value the value to set the attribute access_token to.
  def access_token=(_arg0); end

  def authorize_params; end
  def callback_phase; end
  def client; end
  def request_phase; end
  def token_params; end

  protected

  def build_access_token; end
  def deep_symbolize(options); end
  def options_for(option); end
  def pkce_authorize_params; end
  def pkce_token_params; end

  class << self
    # @private
    def inherited(subclass); end
  end
end

# An error that is indicated in the OAuth 2.0 callback.
# This could be a `redirect_uri_mismatch` or other
class OmniAuth::Strategies::OAuth2::CallbackError < ::StandardError
  # @return [CallbackError] a new instance of CallbackError
  def initialize(error, error_reason = T.unsafe(nil), error_uri = T.unsafe(nil)); end

  # Returns the value of attribute error.
  def error; end

  # Sets the attribute error
  #
  # @param value the value to set the attribute error to.
  def error=(_arg0); end

  # Returns the value of attribute error_reason.
  def error_reason; end

  # Sets the attribute error_reason
  #
  # @param value the value to set the attribute error_reason to.
  def error_reason=(_arg0); end

  # Returns the value of attribute error_uri.
  def error_uri; end

  # Sets the attribute error_uri
  #
  # @param value the value to set the attribute error_uri to.
  def error_uri=(_arg0); end

  def message; end
end
