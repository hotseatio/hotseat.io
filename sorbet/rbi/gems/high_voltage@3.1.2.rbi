# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `high_voltage` gem.
# Please instead update this file by running `bin/tapioca gem high_voltage`.

# source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:1
module HighVoltage
  extend ::HighVoltage::Configuration
end

# source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:2
module HighVoltage::Configuration
  # @yield [_self]
  # @yieldparam _self [HighVoltage::Configuration] the object that the method was called on
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:12
  def configure; end

  # Returns the value of attribute content_path.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def content_path; end

  # Sets the attribute content_path
  #
  # @param value the value to set the attribute content_path to.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def content_path=(_arg0); end

  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:24
  def full_path; end

  # Returns the value of attribute home_page.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def home_page; end

  # Sets the attribute home_page
  #
  # @param value the value to set the attribute home_page to.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def home_page=(_arg0); end

  # Returns the value of attribute layout.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def layout; end

  # Sets the attribute layout
  #
  # @param value the value to set the attribute layout to.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def layout=(_arg0); end

  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:20
  def page_ids; end

  # Returns the value of attribute parent_engine.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def parent_engine; end

  # Sets the attribute parent_engine
  #
  # @param value the value to set the attribute parent_engine to.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def parent_engine=(_arg0); end

  # Returns the value of attribute route_drawer.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def route_drawer; end

  # Sets the attribute route_drawer
  #
  # @param value the value to set the attribute route_drawer to.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def route_drawer=(_arg0); end

  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def routes; end

  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:3
  def routes=(_arg0); end

  # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:28
  def set_default_configuration; end

  class << self
    # @private
    #
    # source://high_voltage-3.1.2/lib/high_voltage/configuration.rb:16
    def extended(base); end
  end
end

# source://high_voltage-3.1.2/lib/high_voltage/constraints/root_route.rb:2
module HighVoltage::Constraints; end

# Routing constraint to validate request.path has a corresponding view
#
# source://high_voltage-3.1.2/lib/high_voltage/constraints/root_route.rb:4
class HighVoltage::Constraints::RootRoute
  # @return [RootRoute] a new instance of RootRoute
  #
  # source://high_voltage-3.1.2/lib/high_voltage/constraints/root_route.rb:5
  def initialize; end

  # @return [Boolean]
  #
  # source://high_voltage-3.1.2/lib/high_voltage/constraints/root_route.rb:11
  def matches?(request); end

  private

  # source://high_voltage-3.1.2/lib/high_voltage/constraints/root_route.rb:21
  def clean_page_path(request_path); end

  # source://high_voltage-3.1.2/lib/high_voltage/constraints/root_route.rb:25
  def content_path; end

  # Returns the value of attribute lookup_context.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/constraints/root_route.rb:19
  def lookup_context; end
end

# source://high_voltage-3.1.2/lib/high_voltage/engine.rb:2
class HighVoltage::Engine < ::Rails::Engine; end

# source://high_voltage-3.1.2/lib/high_voltage/page_finder.rb:35
class HighVoltage::InvalidPageIdError < ::StandardError; end

# source://high_voltage-3.1.2/lib/high_voltage/page.rb:2
class HighVoltage::Page
  # @return [Page] a new instance of Page
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:5
  def initialize(content_path, file_path); end

  # Returns the value of attribute content_path.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:3
  def content_path; end

  # Returns the value of attribute file_path.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:3
  def file_path; end

  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:10
  def id; end

  # @return [Boolean]
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:14
  def valid?; end

  private

  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:44
  def available_handlers; end

  # @return [Boolean]
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:32
  def directory?; end

  # @return [Boolean]
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:24
  def exists?; end

  # @return [Boolean]
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:28
  def file_in_content_path?; end

  # @return [Boolean]
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:40
  def handled?; end

  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:20
  def handler_extension; end

  # @return [Boolean]
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page.rb:36
  def partial?; end
end

# source://high_voltage-3.1.2/lib/high_voltage/page_collector.rb:4
class HighVoltage::PageCollector
  # @return [PageCollector] a new instance of PageCollector
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page_collector.rb:7
  def initialize(content_path); end

  # Returns the value of attribute content_path.
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page_collector.rb:5
  def content_path; end

  # source://high_voltage-3.1.2/lib/high_voltage/page_collector.rb:11
  def page_ids; end

  private

  # source://high_voltage-3.1.2/lib/high_voltage/page_collector.rb:17
  def pages; end
end

# A command for finding pages by id. This encapsulates the concepts of
# mapping page names to file names.
#
# source://high_voltage-3.1.2/lib/high_voltage/page_finder.rb:4
class HighVoltage::PageFinder
  # @return [PageFinder] a new instance of PageFinder
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page_finder.rb:5
  def initialize(page_id); end

  # source://high_voltage-3.1.2/lib/high_voltage/page_finder.rb:21
  def content_path; end

  # Produce a template path to the page, in a format understood by
  # `render :template => find`
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page_finder.rb:11
  def find; end

  protected

  # source://high_voltage-3.1.2/lib/high_voltage/page_finder.rb:30
  def clean_content_pathname; end

  # The raw page id passed in by the user
  #
  # source://high_voltage-3.1.2/lib/high_voltage/page_finder.rb:28
  def page_id; end
end

# source://high_voltage-3.1.2/lib/high_voltage/route_drawers/default.rb:2
module HighVoltage::RouteDrawers; end

# Matches routes in the HighVoltage.content_path directory. By default this looks
# for /pages/id. e.g. http://www.example.com/pages/about_us
#
# source://high_voltage-3.1.2/lib/high_voltage/route_drawers/default.rb:5
class HighVoltage::RouteDrawers::Default
  class << self
    # source://high_voltage-3.1.2/lib/high_voltage/route_drawers/default.rb:6
    def match_attributes; end
  end
end

# Matches routes from root of the domain e.g. http://www.example.com/about_us
# Uses HighVoltage::Constraints::RootRoute to validate view exists.
#
# source://high_voltage-3.1.2/lib/high_voltage/route_drawers/root.rb:5
class HighVoltage::RouteDrawers::Root
  class << self
    # source://high_voltage-3.1.2/lib/high_voltage/route_drawers/root.rb:6
    def match_attributes; end
  end
end

# source://high_voltage-3.1.2/app/controllers/concerns/high_voltage/static_page.rb:1
module HighVoltage::StaticPage
  extend ::ActiveSupport::Concern

  # source://high_voltage-3.1.2/app/controllers/concerns/high_voltage/static_page.rb:25
  def invalid_page; end

  # source://high_voltage-3.1.2/app/controllers/concerns/high_voltage/static_page.rb:18
  def show; end

  private

  # source://high_voltage-3.1.2/app/controllers/concerns/high_voltage/static_page.rb:31
  def current_page; end

  # source://high_voltage-3.1.2/app/controllers/concerns/high_voltage/static_page.rb:35
  def page_finder; end

  # source://high_voltage-3.1.2/app/controllers/concerns/high_voltage/static_page.rb:39
  def page_finder_factory; end
end

# source://high_voltage-3.1.2/lib/high_voltage/version.rb:2
HighVoltage::VERSION = T.let(T.unsafe(nil), String)
