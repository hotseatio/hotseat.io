# typed: strict

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `maildown` gem.
# Please instead update this file by running `bin/tapioca gem maildown`.

# Monkeypatch to allow mailer to auto generate text/html
#
# If you generate a mailer action, by default it will only
# render an html email:
#
#   def welcome
#     mail(
#       to:       "foo@example.com",
#       reply_to: "noreply@schneems.com",
#       subject:  "hello world"
#     )
#   end
#
# You can add a format block to have it produce html
# and text emails:
#
#   def welcome
#     mail(
#       to:       "foo@example.com",
#       reply_to: "noreply@schneems.com",
#       subject:  "hello world"
#     ) do |format|
#      format.text
#      format.html
#    end
#   end
#
# For the handler to work correctly and produce both HTML
# and text emails this would need to be required similar to
# how https://github.com/plataformatec/markerb works.
#
# This monkeypatch detects when a markdown email is being
# used and generates both a markdown and text template
#
# source://maildown//lib/maildown/ext/action_mailer.rb#36
class ActionMailer::Base < ::AbstractController::Base
  include ::AbstractController::Caching::ConfigMethods

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#632
  def initialize; end

  # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#68
  def __callbacks; end

  # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#68
  def __callbacks?; end

  # source://actionpack/7.0.4.3/lib/abstract_controller/helpers.rb#11
  def _helper_methods; end

  # source://actionpack/7.0.4.3/lib/abstract_controller/helpers.rb#11
  def _helper_methods=(_arg0); end

  # source://actionpack/7.0.4.3/lib/abstract_controller/helpers.rb#11
  def _helper_methods?; end

  # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#940
  def _process_action_callbacks; end

  # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#928
  def _run_process_action_callbacks(&block); end

  # source://actionpack/7.0.4.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies; end

  # source://actionpack/7.0.4.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies=(_arg0); end

  # source://actionpack/7.0.4.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies?; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def asset_host; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def asset_host=(value); end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def assets_dir; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def assets_dir=(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#749
  def attachments; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def default_asset_host_protocol; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def default_asset_host_protocol=(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#490
  def default_params; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#490
  def default_params=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#490
  def default_params?; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def default_static_extension; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def default_static_extension=(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#15
  def deliver_later_queue_name; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#15
  def deliver_later_queue_name=(val); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#489
  def delivery_job; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#489
  def delivery_job=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#489
  def delivery_job?; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#18
  def delivery_method; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#18
  def delivery_method=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#18
  def delivery_method?; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#17
  def delivery_methods; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#17
  def delivery_methods=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#17
  def delivery_methods?; end

  # source://maildown//lib/maildown/ext/action_mailer.rb#39
  def each_template(paths, name, &block); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#673
  def email_address_with_name(address, name); end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def enable_fragment_cache_logging; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def enable_fragment_cache_logging=(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def file_settings; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def file_settings=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def file_settings?; end

  # source://actionpack/7.0.4.3/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys; end

  # source://actionpack/7.0.4.3/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys=(_arg0); end

  # source://actionpack/7.0.4.3/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys?; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#711
  def headers(args = T.unsafe(nil)); end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def javascripts_dir; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def javascripts_dir=(value); end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def logger; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def logger=(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#858
  def mail(headers = T.unsafe(nil), &block); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#666
  def mailer_name; end

  # source://activesupport/7.0.4.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def message; end

  # source://activesupport/7.0.4.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def message=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/parameterized.rb#91
  def params; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/parameterized.rb#91
  def params=(_arg0); end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def perform_caching; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def perform_caching=(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#14
  def perform_deliveries; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#14
  def perform_deliveries=(val); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#25
  def preview_interceptors; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#14
  def preview_path; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#638
  def process(method_name, *args, **_arg2); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#13
  def raise_delivery_errors; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#13
  def raise_delivery_errors=(val); end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def relative_url_root; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def relative_url_root=(value); end

  # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
  def rescue_handlers; end

  # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
  def rescue_handlers=(_arg0); end

  # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
  def rescue_handlers?; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def sendmail_settings; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def sendmail_settings=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def sendmail_settings?; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#22
  def show_previews; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def smtp_settings; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def smtp_settings=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def smtp_settings?; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
  def stylesheets_dir; end

  # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
  def stylesheets_dir=(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def test_settings; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def test_settings=(_arg0); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
  def test_settings?; end

  private

  # source://actionview/7.0.4.3/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#1059
  def _protected_ivars; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#935
  def apply_defaults(headers); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#955
  def assign_headers_to_message(message, headers); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#961
  def collect_responses(headers, &block); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#971
  def collect_responses_from_block(headers); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#985
  def collect_responses_from_templates(headers); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#978
  def collect_responses_from_text(headers); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#945
  def compute_default(value); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#1028
  def create_parts_from_responses(m, responses); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#925
  def default_i18n_subject(interpolations = T.unsafe(nil)); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#1041
  def insert_part(container, response, charset); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#1055
  def instrument_name; end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#1048
  def instrument_payload(key); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#998
  def original_each_template(paths, name, &block); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#903
  def set_content_type(m, user_content_type, class_default); end

  # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#1007
  def wrap_inline_attachments(message); end

  class << self
    # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#68
    def __callbacks=(value); end

    # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#68
    def __callbacks?; end

    # source://actionpack/7.0.4.3/lib/abstract_controller/helpers.rb#11
    def _helper_methods; end

    # source://actionpack/7.0.4.3/lib/abstract_controller/helpers.rb#11
    def _helper_methods=(value); end

    # source://actionpack/7.0.4.3/lib/abstract_controller/helpers.rb#11
    def _helper_methods?; end

    # source://actionpack/7.0.4.3/lib/abstract_controller/helpers.rb#15
    def _helpers; end

    # source://actionview/7.0.4.3/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/7.0.4.3/lib/action_view/layouts.rb#209
    def _layout=(value); end

    # source://actionview/7.0.4.3/lib/action_view/layouts.rb#209
    def _layout?; end

    # source://actionview/7.0.4.3/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionview/7.0.4.3/lib/action_view/layouts.rb#210
    def _layout_conditions=(value); end

    # source://actionview/7.0.4.3/lib/action_view/layouts.rb#210
    def _layout_conditions?; end

    # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#932
    def _process_action_callbacks; end

    # source://activesupport/7.0.4.3/lib/active_support/callbacks.rb#936
    def _process_action_callbacks=(value); end

    # source://actionpack/7.0.4.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies; end

    # source://actionpack/7.0.4.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies=(value); end

    # source://actionpack/7.0.4.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies?; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def asset_host; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def asset_host=(value); end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def assets_dir; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def assets_dir=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#558
    def controller_path; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#570
    def default(value = T.unsafe(nil)); end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def default_asset_host_protocol; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def default_asset_host_protocol=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#570
    def default_options=(value = T.unsafe(nil)); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#490
    def default_params; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#490
    def default_params=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#490
    def default_params?; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def default_static_extension; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def default_static_extension=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#15
    def deliver_later_queue_name; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#15
    def deliver_later_queue_name=(val); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#585
    def deliver_mail(mail); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#489
    def delivery_job; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#489
    def delivery_job=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#489
    def delivery_job?; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#18
    def delivery_method; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#18
    def delivery_method=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#18
    def delivery_method?; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#17
    def delivery_methods; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#17
    def delivery_methods=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#17
    def delivery_methods?; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#595
    def email_address_with_name(address, name); end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def enable_fragment_cache_logging; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def enable_fragment_cache_logging=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def file_settings; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def file_settings=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def file_settings?; end

    # source://actionpack/7.0.4.3/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys; end

    # source://actionpack/7.0.4.3/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys=(value); end

    # source://actionpack/7.0.4.3/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys?; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def javascripts_dir; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def javascripts_dir=(value); end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def logger; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def logger=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#558
    def mailer_name; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#562
    def mailer_name=(_arg0); end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def perform_caching; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def perform_caching=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#14
    def perform_deliveries; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#14
    def perform_deliveries=(val); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#25
    def preview_interceptors; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#25
    def preview_interceptors=(val); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#14
    def preview_path; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#14
    def preview_path=(val); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#13
    def raise_delivery_errors; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#13
    def raise_delivery_errors=(val); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#535
    def register_interceptor(interceptor); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#509
    def register_interceptors(*interceptors); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#521
    def register_observer(observer); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#499
    def register_observers(*observers); end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def relative_url_root; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def relative_url_root=(value); end

    # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
    def rescue_handlers; end

    # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
    def rescue_handlers=(value); end

    # source://activesupport/7.0.4.3/lib/active_support/rescuable.rb#13
    def rescue_handlers?; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def sendmail_settings; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def sendmail_settings=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def sendmail_settings?; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#22
    def show_previews; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/preview.rb#22
    def show_previews=(val); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def smtp_settings; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def smtp_settings=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def smtp_settings?; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#113
    def stylesheets_dir; end

    # source://activesupport/7.0.4.3/lib/active_support/configurable.rb#114
    def stylesheets_dir=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#931
    def supports_path?; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def test_settings; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def test_settings=(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/delivery_methods.rb#51
    def test_settings?; end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#542
    def unregister_interceptor(interceptor); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#514
    def unregister_interceptors(*interceptors); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#528
    def unregister_observer(observer); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#504
    def unregister_observers(*observers); end

    private

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#616
    def method_missing(method_name, *args, **_arg2); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#546
    def observer_class_for(value); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#625
    def respond_to_missing?(method, include_all = T.unsafe(nil)); end

    # source://actionmailer/7.0.4.3/lib/action_mailer/base.rb#603
    def set_payload_for_mail(payload, mail); end
  end
end

# This monkeypatch allows the use of `.md.erb` file extensions
# in addition to `.md+erb` and `.md`
#
# source://maildown//lib/maildown/ext/action_view.rb#4
module ActionView
  class << self
    # source://actionview/7.0.4.3/lib/action_view.rb#90
    def eager_load!; end

    # source://actionview/7.0.4.3/lib/action_view/gem_version.rb#5
    def gem_version; end

    # source://actionview/7.0.4.3/lib/action_view/version.rb#7
    def version; end
  end
end

# https://github.com/codetriage/maildown/issues/59
#
# extract_handler_and_format_and_variant was removed in https://github.com/rails/rails/commit/2be8d3ebf85e26e936a7717b968737ee333d95bd
# OptimizedFileSystemResolver was removed in https://github.com/rails/rails/commit/faac734387124c6d780dbfcfdab721b2f26ce865
#
# source://maildown//lib/maildown/ext/action_view.rb#9
class ActionView::OptimizedFileSystemResolver < ::ActionView::FileSystemResolver
  # Different versions of rails have different
  # method signatures here, path is always first
  #
  # source://maildown//lib/maildown/ext/action_view.rb#26
  def extract_handler_and_format_and_variant(*args); end

  # source://maildown//lib/maildown/ext/action_view.rb#10
  def original_extract_handler_and_format_and_variant(template); end
end

# Top level module, all module methods are used for configuration
#
# source://maildown//lib/maildown.rb#2
module Maildown
  class << self
    # source://maildown//lib/maildown.rb#6
    def allow_indentation; end

    # source://maildown//lib/maildown.rb#10
    def allow_indentation=(allow_indentations); end

    # @return [Boolean]
    #
    # source://maildown//lib/maildown.rb#14
    def rails_6?; end
  end
end

# source://maildown//lib/maildown/handlers/markdown.rb#5
module Maildown::Handlers; end

# The handler is what allows Rails to render markdown
#
# See docs/rails_template_handler.pdf for detailed tutorial on
# using a template handler with Rails.
#
# The TLDR; is you define a handler that responds to `call` and then
# you register it against an file extension with `ActionView::Template.register_template_handler`
#
# At runtime if Rails finds a template with the same file extension that was
# registered it will use you handler and pass the template into `call` to
# render the template
#
# source://maildown//lib/maildown/handlers/markdown.rb#17
module Maildown::Handlers::Markdown
  class << self
    # Expected return value is valid ruby code wrapped in a string.
    #
    # This handler takes care of both text and html email templates
    # by inspectig the available `"formats"` and rendering the
    # markdown to HTML if one of the formats is `:html`.
    #
    # source://maildown//lib/maildown/handlers/markdown.rb#27
    def call(template, source = T.unsafe(nil)); end

    # source://maildown//lib/maildown/handlers/markdown.rb#18
    def erb_handler; end
  end
end

# This module provides the API for Replacing the Markdown engine
#
# Maildown uses [kramdown](https://github.com/gettalong/kramdown) by default.
# Kramdown is pure ruby, so it runs the same across all ruby implementations:
# jruby, rubinius, MRI, etc. You can configure another parser if you like using
# the `Maildown::MarkdownEngine.set_html` method and pasing it a block.
#
# For example, if you wanted to use Redcarpet you could set it like this:
#
#
#   Maildown::MarkdownEngine.set_html do |text|
#     carpet = Redcarpet::Markdown.new(Redcarpet::Render::HTML, {})
#     carpet.render(text).html_safe
#   end
#
# source://maildown//lib/maildown/markdown_engine.rb#19
module Maildown::MarkdownEngine
  class << self
    # source://maildown//lib/maildown/markdown_engine.rb#51
    def default_html_block; end

    # source://maildown//lib/maildown/markdown_engine.rb#55
    def default_text_block; end

    # source://maildown//lib/maildown/markdown_engine.rb#43
    def html_block; end

    # source://maildown//lib/maildown/markdown_engine.rb#35
    def set(&block); end

    # source://maildown//lib/maildown/markdown_engine.rb#31
    def set_html(&block); end

    # source://maildown//lib/maildown/markdown_engine.rb#39
    def set_text(&block); end

    # source://maildown//lib/maildown/markdown_engine.rb#47
    def text_block; end

    # source://maildown//lib/maildown/markdown_engine.rb#23
    def to_html(string); end

    # source://maildown//lib/maildown/markdown_engine.rb#27
    def to_text(string); end
  end
end
