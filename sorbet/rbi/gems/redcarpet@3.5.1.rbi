# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `redcarpet` gem.
# Please instead update this file by running `bin/tapioca sync`.

# typed: true

Markdown = RedcarpetCompat
module Redcarpet; end

class Redcarpet::Markdown
  def render(_arg0); end
  def renderer; end

  class << self
    def new(*_arg0); end
  end
end

module Redcarpet::Render; end

class Redcarpet::Render::Base
  def initialize; end
end

class Redcarpet::Render::HTML < ::Redcarpet::Render::Base
  def initialize(*_arg0); end
end

class Redcarpet::Render::HTML_TOC < ::Redcarpet::Render::Base
  def initialize(*_arg0); end
end

class Redcarpet::Render::Safe < ::Redcarpet::Render::HTML
  def initialize(extensions = T.unsafe(nil)); end

  def block_code(code, lang); end

  private

  def html_escape(string); end
end

class Redcarpet::Render::SmartyHTML < ::Redcarpet::Render::HTML
  include ::Redcarpet::Render::SmartyPants
end

module Redcarpet::Render::SmartyPants
  extend ::Redcarpet::Render::SmartyPants

  def postprocess(_arg0); end

  class << self
    def render(text); end
  end
end

class Redcarpet::Render::XHTML < ::Redcarpet::Render::HTML
  def initialize(extensions = T.unsafe(nil)); end
end

Redcarpet::VERSION = T.let(T.unsafe(nil), String)

class RedcarpetCompat
  def initialize(text, *exts); end

  def text; end
  def text=(_arg0); end
  def to_html(*_dummy); end

  private

  def list_to_truthy_hash(list); end
  def parse_extensions_and_renderer_options(exts); end
  def rename_extensions(exts); end
end

RedcarpetCompat::EXTENSION_MAP = T.let(T.unsafe(nil), Hash)
RedcarpetCompat::RENDERER_OPTIONS = T.let(T.unsafe(nil), Array)
